import  networkx as nx
import matplotlib.pyplot as plt
graph_X = {'A':{'B','C'},
           'C':{'F'},
           'F':{'D','E'},
           'C':{'P'}
           } #{'A', set(['B','C'])}


g = nx.DiGraph()
g.add_nodes_from([1,2,3,4,5])
g.add_edge(1,2)
g.add_edge(4,2)
g.add_edge(3,5)

g.add_edge(5,2)
g.add_edge(2,5)
g.add_edge(5,4)

nx.draw(g,with_labels=True)
plt.draw()
plt.show()

G2 = nx.DiGraph()
G2.add_edges_from(
    [('A', 'B'), ('A', 'C'), ('D', 'B'), ('E', 'C'), ('E', 'F'),
     ('B', 'H'), ('B', 'G'), ('B', 'F'), ('C', 'G')])

nx.draw(G2, with_labels = True)
plt.show()

G1= nx.Graph(graph_X)
nx.draw(G1, with_labels = True)
plt.show()

#print(graph_X[1].items())
for k,v in graph_X.items():
 print ('key is :-->',k)
 for v1 in v:
     print('values are:--->',v1)

G=nx.Graph()
G.add_nodes_from('hello')
G.add_edges_from([('0','1'),('1','2'),('2','0'),('2','5'),('5','1'),('5','7')])

nx.draw_random(G, with_labels = True)
#print(sorted(G.nodes(),key=str))

#n.draw(G)
plt.show()
#plt.show(n.draw(G,pos=n.spring_layout(G)))
#plt.interactive(False)
